name: CI
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.22
      - uses: golangci/golangci-lint-action@v3
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.22
      - run: go test -v ./...
  release:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.22
      - uses: go-semantic-release/action@v1
        with:
          hooks: goreleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Signs with Dilithium
        if: steps.semrel.outputs.version != ''
        uses: theQRL/actions-dilithium-sign@v1
        with:
          patterns: |
            dist/*.zip
          hexseed: ${{ secrets.DILITHIUM_HEXSEED }}
          output: sig.txt
      - uses: actions-ecosystem/action-get-latest-tag@v1
        if: steps.semrel.outputs.version != ''
        id: get-latest-tag
        with:
          semver_only: true
      - name: Trim dist/ from signatures file
        if: steps.semrel.outputs.version != ''
        run: |
          sed 's/dist\///g' sig.txt >qrlft_${{ steps.get-latest-tag.outputs.tag }}_signatures.txt
      - name: Add to release
        uses: AButler/upload-release-assets@v2.0
        if: steps.semrel.outputs.version != ''
        with:
          files: qrlft_${{ steps.get-latest-tag.outputs.tag }}_signatures.txt
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.get-latest-tag.outputs.tag }}
